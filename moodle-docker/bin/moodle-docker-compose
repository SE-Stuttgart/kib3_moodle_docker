#!/usr/bin/env bash
set -e

# First find out if this was called from symlink,
# then find the real path of parent directory.
# This is needed because macOS does not have GNU realpath.
thisfile=$( readlink "${BASH_SOURCE[0]}" ) || thisfile="${BASH_SOURCE[0]}"
basedir="$( cd "$( dirname "$thisfile" )/../" && pwd -P )"
# export MOODLE_DOCKER_WWWROOT="${basedir}/moodle"

# Copy environment file into webserver install script folder
source $basedir/config.env
export COURSE_BACKUP_FILE=${COURSE_BACKUP_FILE}
echo "Course backup file: ${COURSE_BACKUP_FILE}"

##
## ORIGINAL CODE 
##

if [ -z "$MOODLE_DOCKER_DB" ];
then
    echo 'Error: $MOODLE_DOCKER_DB is not set'
    exit 1
fi

export ASSETDIR="${basedir}/assets"

# Test if we have docker compose v2, and keep quiet if we don't.
ver=$(docker compose version > /dev/null 2>&1 && docker compose version --short) || true
if [[ $ver =~ ^v?2 ]]; then
  dockercompose="docker compose"
else
  echo 'Compose v2 is not available in Docker CLI, falling back to use docker-compose script'
  dockercompose="docker-compose"
fi
dockercompose="${dockercompose} -f ${basedir}/base.yml"
dockercompose="${dockercompose} -f ${basedir}/service.mail.yml"

# PHP Version.
export MOODLE_DOCKER_PHP_VERSION=${MOODLE_DOCKER_PHP_VERSION:-8.1}

# Database flavour.
dockercompose="${dockercompose} -f ${basedir}/db.${MOODLE_DOCKER_DB}.yml"

# Add support for version specific database settings.
if [ ! -z "$MOODLE_DOCKER_DB_VERSION" ];
then
    filename="${basedir}/db.${MOODLE_DOCKER_DB}.${MOODLE_DOCKER_DB_VERSION}.yml"
    if [ -f $filename ]; then
        dockercompose="${dockercompose} -f ${filename}"
    fi
fi

# Support PHP version overrides for DB not available any more.

# Expose DB port if requested.
if [[ $MOODLE_DOCKER_DB_PORT == *":"* ]] || [[ $MOODLE_DOCKER_DB_PORT -gt 0 ]]
then
    # If no bind ip has been configured (bind_ip:port), default to 127.0.0.1
    if [[ ! $MOODLE_DOCKER_DB_PORT == *":"* ]]
    then
        export MOODLE_DOCKER_DB_PORT=127.0.0.1:$MOODLE_DOCKER_DB_PORT
    fi
    filename="${basedir}/db.${MOODLE_DOCKER_DB}.port.yml"
    if [ -f $filename ];
    then
        dockercompose="${dockercompose} -f ${filename}"
    fi
fi


# Webserver host
export MOODLE_DOCKER_WEB_HOST=${MOODLE_DOCKER_WEB_HOST:-localhost}

# Webserver port
export MOODLE_DOCKER_WEB_PORT=${MOODLE_DOCKER_WEB_PORT:-8000}
if [[ $MOODLE_DOCKER_WEB_PORT == *":"* ]] || [[ $MOODLE_DOCKER_WEB_PORT -gt 0 ]]
then
    # If no bind ip has been configured (bind_ip:port), default to 127.0.0.1
    if [[ ! $MOODLE_DOCKER_WEB_PORT == *":"* ]]
    then
        MOODLE_DOCKER_WEB_PORT=127.0.0.1:$MOODLE_DOCKER_WEB_PORT
    fi
    dockercompose="${dockercompose} -f ${basedir}/webserver.port.yml"
fi


# Mac OS Compatbility
# if [[ "$(uname)" == "Darwin" ]]; then
#     # Support https://docs.docker.com/docker-for-mac/osxfs-caching/
#     dockercompose="${dockercompose} -f ${basedir}/volumes-cached.yml"
# fi

# # Apply local customisations if a local.yml is found.
# # Note: This must be the final modification before the docker-compose command is called.
# localfile="${basedir}/local.yml"
# if [ -f "${localfile}" ]
# then
#   echo "Including local options from ${localfile}"
#   dockercompose="${dockercompose} -f ${localfile}"
# fi

$dockercompose "$@"
